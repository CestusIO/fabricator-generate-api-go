!!pathreplace VERSION {{.API.Version}}
!!filename {{.API.Version}}_s2s_service.proto
!!if .ExtInfo.IsS2SAPI

syntax = "proto3";

package {{.PluginComponent.Spec.ServiceName | ToGoPackageName }}.{{.API.Version}};
option go_package = "{{.GoModule}}/{{.API.Version}}/go/{{.PluginComponent.Spec.ServiceName | ToGoPackageName}}_{{.API.Version}}_s2s";
option optimize_for = LITE_RUNTIME;

import "{{.API.Version}}_common.proto";

// S2S{{.PluginComponent.Spec.ServiceName | ToGoName}} is a S2S {{.PluginComponent.Spec.ServiceName | ToGoName}}
service S2S{{.PluginComponent.Spec.ServiceName | ToGoName}} {
     rpc Echo(EchoMessage) returns (EchoMessage);
}

